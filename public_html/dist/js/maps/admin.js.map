{"version":3,"sources":["admin.js"],"names":["window","Barryvanveen","admin","initClickableTableRows","initMarkdownEditors","initCharacterCounters","initLogModal","$","mousedown","e","preventDefault","which","win","open","this","data","focus","document","location","MarkdownEditor","element","$input","$preview","name","updateMarkdownEditor","debounce","post","markdownToHtmlRoute","markdown","val","html","Prism","highlightAll","keyup","each","index","editor","CharacterCounter","$counter","inputname","updateCounter","length","counter","on","event","button","relatedTarget","level","text","file","stack","modal","find"],"mappings":"AAAAA,OAAOC,aAAeD,OAAOC,iBAE7BD,OAAOC,aAAaC,MAAQ,WAExBF,OAAOC,aAAaE,yBACpBH,OAAOC,aAAaG,sBACpBJ,OAAOC,aAAaI,wBACpBL,OAAOC,aAAaK,gBAOxBN,OAAOC,aAAaE,uBAAyB,WAEzCI,EAAE,qBAAqBC,UAAU,SAAUC,GAIvC,GAHAA,EAAEC,iBAGa,GAAXD,EAAEE,MAAY,CACd,GAAIC,GAAMZ,OAAOa,KAAKN,EAAEO,MAAMC,KAAK,QAAS,SAI5C,aAHIH,GACAA,EAAII,SAKZhB,OAAOiB,SAASC,SAAWX,EAAEO,MAAMC,KAAK,WAUhDf,OAAOC,aAAakB,eAAiB,SAAUC,GAE3C,GAAIC,GAASd,EAAEa,GACXE,EAAWf,EAAE,iCAAmCa,EAAQG,KAAO,IAEnET,MAAKU,qBAAuBxB,OAAOC,aAAawB,SAAS,WAErDlB,EAAEmB,KAAKzB,aAAa0B,qBAAsBC,SAAUP,EAAOQ,OAAQ,SAAUd,GAEzEO,EAASQ,KAAKf,EAAKe,MACnBC,MAAMC,gBAEP,SAEJ,KAEHX,EAAOY,MAAMnB,KAAKU,sBAElBV,KAAKU,wBAOTxB,OAAOC,aAAaG,oBAAsB,WAEtCG,EAAE,+BAA+B2B,KAAK,SAAUC,EAAOf,GACnDpB,OAAOC,aAAamC,OAAS,GAAIpC,QAAOC,aAAakB,eAAeC,MAU5EpB,OAAOC,aAAaoC,iBAAmB,SAAUjB,GAE7C,GAAIkB,GAAW/B,EAAEa,GACbmB,EAAYD,EAASvB,KAAK,0BAC1BM,EAASd,EAAE,kBAAoBgC,EAAY,KAE/CzB,MAAK0B,cAAgB,WACjBF,EAASR,KAAKT,EAAOQ,MAAMY,SAG/BpB,EAAOY,MAAMnB,KAAK0B,eAElB1B,KAAK0B,iBAOTxC,OAAOC,aAAaI,sBAAwB,WAExCE,EAAE,yBAAyB2B,KAAK,SAAUC,EAAOf,GAC7CpB,OAAOC,aAAayC,QAAU,GAAI1C,QAAOC,aAAaoC,iBAAiBjB,MAS/EpB,OAAOC,aAAaK,aAAe,WAG/BC,EAAE,aAAaoC,GAAG,gBAAiB,SAAUC,GAGzC,GAAIC,GAAStC,EAAEqC,EAAME,eAGjBC,EAAQF,EAAO9B,KAAK,SACpBiC,EAAOH,EAAO9B,KAAK,QACnBkC,EAAOJ,EAAO9B,KAAK,QACnBmC,EAAQL,EAAO9B,KAAK,SAGpBoC,EAAQ5C,EAAEO,KACdqC,GAAMC,KAAK,gBAAgBtB,KAAKiB,EAAQ,KAAOC,GAC/CG,EAAMC,KAAK,eAAetB,KAAK,kBAAoBmB,EAAO,WAAaC,EAAQ,eASvFlD,OAAOC,aAAaC","file":"../admin.js","sourcesContent":["window.Barryvanveen = window.Barryvanveen || {};\r\n\r\nwindow.Barryvanveen.admin = function () {\r\n\r\n    window.Barryvanveen.initClickableTableRows();\r\n    window.Barryvanveen.initMarkdownEditors();\r\n    window.Barryvanveen.initCharacterCounters();\r\n    window.Barryvanveen.initLogModal();\r\n\r\n};\r\n\r\n/**\r\n * init clickable table rows\r\n */\r\nwindow.Barryvanveen.initClickableTableRows = function () {\r\n\r\n    $('.js-clickable-row').mousedown(function (e) {\r\n        e.preventDefault();\r\n\r\n        // middle mouseclick, open in new window\r\n        if (e.which == 2) {\r\n            var win = window.open($(this).data('href'), '_blank');\r\n            if (win) {\r\n                win.focus();\r\n            }\r\n            return;\r\n        }\r\n\r\n        window.document.location = $(this).data(\"href\");\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * turn an element into a markdown editor\r\n *\r\n * @param element\r\n */\r\nwindow.Barryvanveen.MarkdownEditor = function (element) {\r\n\r\n    var $input = $(element);\r\n    var $preview = $('div[data-markdown-editor-name=' + element.name + ']');\r\n\r\n    this.updateMarkdownEditor = window.Barryvanveen.debounce(function () {\r\n\r\n        $.post(Barryvanveen.markdownToHtmlRoute, {markdown: $input.val()}, function (data) {\r\n\r\n            $preview.html(data.html);\r\n            Prism.highlightAll();\r\n\r\n        }, 'json');\r\n\r\n    }, 500);\r\n\r\n    $input.keyup(this.updateMarkdownEditor);\r\n\r\n    this.updateMarkdownEditor();\r\n\r\n};\r\n\r\n/**\r\n * init markdown editors\r\n */\r\nwindow.Barryvanveen.initMarkdownEditors = function () {\r\n\r\n    $('textarea.js-markdown-editor').each(function (index, element) {\r\n        window.Barryvanveen.editor = new window.Barryvanveen.MarkdownEditor(element);\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * turn an element into a character counter\r\n *\r\n * @param element\r\n */\r\nwindow.Barryvanveen.CharacterCounter = function (element) {\r\n\r\n    var $counter = $(element);\r\n    var inputname = $counter.data('character-counter-name');\r\n    var $input = $('textarea[name=\"' + inputname + '\"]');\r\n\r\n    this.updateCounter = function () {\r\n        $counter.html($input.val().length);\r\n    };\r\n\r\n    $input.keyup(this.updateCounter);\r\n\r\n    this.updateCounter();\r\n\r\n};\r\n\r\n/**\r\n * init character counters\r\n */\r\nwindow.Barryvanveen.initCharacterCounters = function () {\r\n\r\n    $('.js-character-counter').each(function (index, element) {\r\n        window.Barryvanveen.counter = new window.Barryvanveen.CharacterCounter(element);\r\n    });\r\n\r\n};\r\n\r\n\r\n/**\r\n * init log table\r\n */\r\nwindow.Barryvanveen.initLogModal = function () {\r\n\r\n    // handle clicks to open a bootstrap modal with full exception stack\r\n    $('#logModal').on('show.bs.modal', function (event) {\r\n\r\n        // Button that triggered the modal\r\n        var button = $(event.relatedTarget);\r\n\r\n        // Extract info from data-* attributes\r\n        var level = button.data('level');\r\n        var text = button.data('text');\r\n        var file = button.data('file');\r\n        var stack = button.data('stack');\r\n\r\n        // Update the modal's content\r\n        var modal = $(this);\r\n        modal.find('.modal-title').html(level + \": \" + text);\r\n        modal.find('.modal-body').html(\"<small>In file \" + file + \"<br><br>\" + stack + \"</small>\");\r\n\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * start scripts\r\n */\r\nwindow.Barryvanveen.admin();"]}