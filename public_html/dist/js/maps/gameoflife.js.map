{"version":3,"sources":["gameoflife.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","GameOfLife","Helpers","this","value","element","left","top","offsetParent","offsetLeft","offsetTop","n","m","State","config","row","col","num_cols","cells","changes","num_rows","rowOffset","colOffset","neighborCol","neighborRow","count","mod","push","Canvas","state","canvas","document","getElementById","canvas_id","Error","context","getContext","width","cell_size","height","clearRect","fillStyle","color_cell_dead","strokeStyle","color_lines","fillRect","x","moveTo","lineTo","y","stroke","e","cell","_getCellFromCursorPosition","cellState","changeCell","_drawCell","pageX","pageY","clientX","body","scrollLeft","documentElement","clientY","scrollTop","canvas_offset","getPosition","Math","floor","color_cell_alive","customConfig","_defaults","update_interval","_interval","_buildConfig","_setEventListeners","self","addEventListener","_handleClick","stop","setInterval","computeNextState","clearInterval"],"mappings":"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","file":"gameoflife.js","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//  GameOfLife JavaScript Plugin v1.0.3\n//  https://github.com/barryvanveen/gameoflife\n//\n//  Released under the MIT license\n//  http://choosealicense.com/licenses/mit/\nvar GameOfLife = function () {\n    'use strict';\n\n    var Helpers = function () {\n        function Helpers() {\n            _classCallCheck(this, Helpers);\n        }\n\n        _createClass(Helpers, null, [{\n            key: \"getPosition\",\n            value: function getPosition(element) {\n\n                var left = 0,\n                    top = 0;\n\n                if (element.offsetParent) {\n                    do {\n                        left += element.offsetLeft;\n                        top += element.offsetTop;\n                    } while (element = element.offsetParent);\n                }\n\n                return [left, top];\n            }\n        }, {\n            key: \"mod\",\n            value: function mod(n, m) {\n                return (m % n + n) % n;\n            }\n        }]);\n\n        return Helpers;\n    }();\n\n    var State = function () {\n        function State(config) {\n            _classCallCheck(this, State);\n\n            this.config = config;\n\n            var col = this.config.num_cols,\n                row;\n\n            this.cells = [];\n            this.changes = [];\n\n            while (col--) {\n                this.cells[col] = [];\n\n                row = this.config.num_rows;\n                while (row--) {\n                    this.cells[col][row] = 0;\n                }\n            }\n        }\n\n        _createClass(State, [{\n            key: \"changeCell\",\n            value: function changeCell(col, row) {\n                this.cells[col][row] = !this.cells[col][row];\n\n                return this.cells[col][row];\n            }\n        }, {\n            key: \"computeNextState\",\n            value: function computeNextState() {\n\n                var count = 0,\n                    col,\n                    row,\n                    rowOffset,\n                    colOffset,\n                    neighborCol,\n                    neighborRow;\n\n                this.changes = [];\n\n                // iterate over all cells\n                col = this.config.num_cols;\n                while (col--) {\n\n                    row = this.config.num_rows;\n                    while (row--) {\n\n                        count = 0;\n\n                        // iterate over all neighbors in Moore neighborhood with radius=1\n                        for (colOffset = -1; colOffset <= 1; ++colOffset) {\n                            for (rowOffset = -1; rowOffset <= 1; ++rowOffset) {\n                                if (colOffset == 0 && rowOffset == 0) {\n                                    continue;\n                                }\n\n                                neighborCol = col + colOffset;\n                                if (neighborCol < 0 || neighborCol >= this.config.num_cols) {\n                                    neighborCol = Helpers.mod(this.config.num_cols, neighborCol);\n                                }\n\n                                neighborRow = row + rowOffset;\n                                if (neighborRow < 0 || neighborRow >= this.config.num_rows) {\n                                    neighborRow = Helpers.mod(this.config.num_rows, neighborRow);\n                                }\n\n                                // count neighbors that are \"on\" or \"alive\"\n                                if (this.cells[neighborCol][neighborRow]) {\n                                    count++;\n                                }\n                            }\n                        }\n\n                        // determine state of new cells\n                        // die if under- or overpopulated\n                        if ((count < 2 || count > 3) && this.cells[col][row]) {\n                            this.changes.push({ col: col, row: row });\n                            // come to life if exactly 3 neighbors\n                        } else if (count == 3 && !this.cells[col][row]) {\n                                this.changes.push({ col: col, row: row });\n                            }\n                    }\n                }\n\n                return this.changes;\n            }\n        }]);\n\n        return State;\n    }();\n\n    var Canvas = function () {\n        function Canvas(config, state) {\n            _classCallCheck(this, Canvas);\n\n            this.config = config;\n            this.state = state;\n\n            this.canvas = document.getElementById(this.config.canvas_id);\n\n            if (this.canvas == null) {\n                throw new Error(\"Canvas element could not be found.\");\n            }\n\n            this.context = this.canvas.getContext(\"2d\");\n\n            if (!this.context) {\n                throw new Error(\"Canvas context could not be retrieved.\");\n            }\n\n            this.canvas.width = this.config.num_cols * this.config.cell_size + 1;\n            this.canvas.height = this.config.num_rows * this.config.cell_size + 1;\n\n            // clear the canvas\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n            // fill the background\n            this.context.fillStyle = this.config.color_cell_dead;\n            this.context.strokeStyle = this.config.color_lines;\n            this.context.fillRect(1, 1, this.canvas.width - 1, this.canvas.height - 1);\n\n            // vertical lines\n            for (var x = 0; x <= this.canvas.width; x += this.config.cell_size) {\n                this.context.moveTo(0.5 + x, 0);\n                this.context.lineTo(0.5 + x, this.canvas.width);\n            }\n\n            // horizontal lines\n            for (var y = 0; y <= this.canvas.width; y += this.config.cell_size) {\n                this.context.moveTo(0, 0.5 + y);\n                this.context.lineTo(this.canvas.width, 0.5 + y);\n            }\n\n            // draw it\n            this.context.stroke();\n        }\n\n        _createClass(Canvas, [{\n            key: \"_handleClick\",\n            value: function _handleClick(e) {\n\n                var cell = this._getCellFromCursorPosition(e);\n\n                if (cell == false) {\n                    return;\n                }\n\n                var cellState = this.state.changeCell(cell[0], cell[1]);\n\n                this._drawCell(cell[0], cell[1], cellState);\n            }\n        }, {\n            key: \"_getCellFromCursorPosition\",\n            value: function _getCellFromCursorPosition(e) {\n\n                var left, top;\n\n                // get coordinates of click on page\n                if (typeof e.pageX != \"undefined\" && typeof e.pageY != \"undefined\") {\n                    left = e.pageX;\n                    top = e.pageY;\n                } else {\n                    left = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n                    top = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n                }\n\n                // get coordinates relative to canvas\n                var canvas_offset = Helpers.getPosition(this.canvas);\n                left -= canvas_offset[0];\n                top -= canvas_offset[1];\n\n                if (left > this.config.num_cols * this.config.cell_size || top > this.config.num_rows * this.config.cell_size) {\n                    return false;\n                }\n\n                // now calculate in which cell this click falls\n                return [Math.floor(left / this.config.cell_size), Math.floor(top / this.config.cell_size)];\n            }\n        }, {\n            key: \"_drawCell\",\n            value: function _drawCell(col, row, cellState) {\n\n                if (cellState) {\n                    this.context.fillStyle = this.config.color_cell_alive;\n                } else {\n                    this.context.fillStyle = this.config.color_cell_dead;\n                }\n\n                // fill rectangle from (col-1,row-1) with width and height of cellSize-1\n                this.context.fillRect(1 + col * this.config.cell_size, 1 + row * this.config.cell_size, this.config.cell_size - 1, this.config.cell_size - 1);\n            }\n        }]);\n\n        return Canvas;\n    }();\n\n    var GameOfLife = function () {\n        function GameOfLife(customConfig) {\n            _classCallCheck(this, GameOfLife);\n\n            this._defaults = {\n                canvas_id: \"gameoflife_canvas\",\n                num_cols: 80,\n                num_rows: 40,\n                cell_size: 10,\n                color_lines: \"#cccccc\",\n                color_cell_dead: \"#ffffff\",\n                color_cell_alive: \"#57A0DB\",\n                update_interval: 50\n            };\n            this._interval = null;\n\n            this.config = this._buildConfig(customConfig);\n            this.state = new State(this.config);\n            this.canvas = new Canvas(this.config, this.state);\n            this._setEventListeners();\n        }\n\n        _createClass(GameOfLife, [{\n            key: \"_buildConfig\",\n            value: function _buildConfig(customConfig) {\n\n                var i;\n\n                var config = this._defaults;\n\n                if ((typeof customConfig === \"undefined\" ? \"undefined\" : _typeof(customConfig)) != \"object\") {\n                    return config;\n                }\n\n                for (i in customConfig) {\n                    if (typeof config[i] == \"undefined\" || _typeof(customConfig[i]) == \"object\") {\n                        continue;\n                    }\n                    config[i] = customConfig[i];\n                }\n\n                return config;\n            }\n        }, {\n            key: \"_setEventListeners\",\n            value: function _setEventListeners() {\n\n                var self = this;\n\n                this.canvas.canvas.addEventListener('click', function (e) {\n                    self.canvas._handleClick(e);\n                }, false);\n            }\n        }, {\n            key: \"setState\",\n            value: function setState(cells) {\n\n                var i, cellState;\n\n                this.stop();\n\n                if (cells.length == 0) {\n                    return;\n                }\n\n                for (i = 0; i < cells.length; i++) {\n                    cellState = this.state.changeCell(cells[i].col, cells[i].row);\n                    this.canvas._drawCell(cells[i].col, cells[i].row, cellState);\n                }\n            }\n        }, {\n            key: \"reset\",\n            value: function reset() {\n\n                this.stop();\n\n                this.state = new State(this.config);\n                this.canvas = new Canvas(this.config, this.state);\n            }\n        }, {\n            key: \"start\",\n            value: function start() {\n\n                if (this._interval != null) {\n                    return;\n                }\n\n                var self = this,\n                    i,\n                    cellState;\n\n                this._interval = setInterval(function () {\n                    var changes = self.state.computeNextState();\n\n                    if (changes.length == 0) {\n                        self.stop();\n                        return;\n                    }\n\n                    for (i = 0; i < changes.length; i++) {\n                        cellState = self.state.changeCell(changes[i].col, changes[i].row);\n                        self.canvas._drawCell(changes[i].col, changes[i].row, cellState);\n                    }\n                }, this.config.update_interval);\n            }\n        }, {\n            key: \"step\",\n            value: function step() {\n\n                var changes, cellState, i;\n\n                this.stop();\n\n                changes = this.state.computeNextState();\n\n                if (changes.length == 0) {\n                    return;\n                }\n\n                for (i = 0; i < changes.length; i++) {\n                    cellState = this.state.changeCell(changes[i].col, changes[i].row);\n                    this.canvas._drawCell(changes[i].col, changes[i].row, cellState);\n                }\n            }\n        }, {\n            key: \"stop\",\n            value: function stop() {\n\n                clearInterval(this._interval);\n                this._interval = null;\n            }\n        }]);\n\n        return GameOfLife;\n    }();\n\n    return GameOfLife;\n}();\n//# sourceMappingURL=gameoflife.min.js.map\n"],"sourceRoot":"/source/"}