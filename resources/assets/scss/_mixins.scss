/**
 * Place a icon in :before, :after of both
 **/
@mixin icon($position: before, $icon: false, $styles: true, $icons-font: $icons-font) {
	@if $position == both {
		$position: 'before, &:after';
	}
	// Either a :before or :after pseudo-element, or both, defaulting to :before
	&:#{$position} {
		@if $icon {
			// A particular icon has been specified
			content: "#{$icon}";
		}
		@if $styles {
			// Supportive icon styles required
			speak: none;
			font-style: normal;
			font-weight: normal;
			font-family: $icons-font;
		}
		// Include any extra rules supplied for the pseudo-element
		@content;
	}
}

/**
 * Default styles for a button
 **/
@mixin btn-primary-sm() {
	display: inline-block;
	margin-bottom: 0; // For input.btn
	font-family: $headings-font-family;
	font-weight: $btn-font-weight;
	text-align: center;
	vertical-align: middle;
	touch-action: manipulation;
	cursor: pointer;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid transparent;
	white-space: nowrap;
	@include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $border-radius-base);
	@include user-select(none);

	&,
	&:active,
	&.active {
		&:focus,
		&.focus {
			@include tab-focus;
		}
	}

	&:hover,
	&:focus,
	&.focus {
		color: $btn-default-color;
		text-decoration: none;
	}

	&:active,
	&.active {
		outline: 0;
		background-image: none;
		@include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
	}

	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		cursor: $cursor-disabled;
		pointer-events: none; // Future-proof disabling of clicks
		@include opacity(.65);
		@include box-shadow(none);
	}

	@include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
	@include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $border-radius-small);
}